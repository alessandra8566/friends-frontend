name: Build and Push Docker Image

on:
  push:
    branches:
      - main # 當推送到 main 分支時觸發

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 檢查代碼
      - name: Checkout code
        uses: actions/checkout@v2

      # 設定 Node.js 環境
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      # 安裝依賴
      - name: Install dependencies
        run: npm install

      # 構建應用
      - name: Build the app
        run: npm run build

      # 登錄 Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 構建 Docker 映像
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/friends-frontend:${{ github.sha }} -f docker/Dockerfile .

      # 推送 Docker 映像到 Docker Hub
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/friends-frontend:${{ github.sha }}

      # 選擇性：將映像標記為最新版本
      - name: Tag and Push latest image
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/friends-frontend:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/friends-frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/friends-frontend:latest

      # Step 5: SSH to remote server, pull new image, and restart container
      - name: Deploy to remote server via SSH
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.REMOTE_HOST }}              # Remote server IP or hostname
          username: ${{ secrets.REMOTE_USER }}          # SSH username
          key: ${{ secrets.REMOTE_KEY }}      # SSH password (or use private key)
          script: |
            cd friends
            source restart.sh